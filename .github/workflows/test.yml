name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create mock Amplify config for CI
      run: |
        echo '{"auth":{"user_pool_id":"mock","aws_region":"us-east-1","user_pool_client_id":"mock","identity_pool_id":"mock","mfa_methods":[],"standard_required_attributes":["email"],"username_attributes":["email"],"user_verification_types":["email"],"groups":[],"mfa_configuration":"NONE","password_policy":{"min_length":8,"require_lowercase":true,"require_numbers":true,"require_symbols":true,"require_uppercase":true},"unauthenticated_identities_enabled":true},"data":{"url":"https://mock.appsync-api.us-east-1.amazonaws.com/graphql","aws_region":"us-east-1","default_authorization_type":"AWS_IAM","authorization_types":["AMAZON_COGNITO_USER_POOLS"],"model_introspection":{"version":1,"models":{},"enums":{},"nonModels":{}}},"version":"1.4"}' > amplify_outputs.json
    
    - name: Run unit tests
      run: npm run test:coverage
    
    # - name: Upload coverage reports
    #   uses: codecov/codecov-action@v3
    #   if: success()

  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create mock Amplify config for CI
      run: |
        echo '{"auth":{"user_pool_id":"mock","aws_region":"us-east-1","user_pool_client_id":"mock","identity_pool_id":"mock","mfa_methods":[],"standard_required_attributes":["email"],"username_attributes":["email"],"user_verification_types":["email"],"groups":[],"mfa_configuration":"NONE","password_policy":{"min_length":8,"require_lowercase":true,"require_numbers":true,"require_symbols":true,"require_uppercase":true},"unauthenticated_identities_enabled":true},"data":{"url":"https://mock.appsync-api.us-east-1.amazonaws.com/graphql","aws_region":"us-east-1","default_authorization_type":"AWS_IAM","authorization_types":["AMAZON_COGNITO_USER_POOLS"],"model_introspection":{"version":1,"models":{},"enums":{},"nonModels":{}}},"version":"1.4"}' > amplify_outputs.json
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Build application
      run: npm run build
    
    - name: Run Playwright tests
      run: npm run test:e2e
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30